import {PUBLICATION_TYPES} from "./consts.ts"
import type {Publication} from "../../types/pulications.ts";
import {useState} from "react";

const PublicationForm: React.FC<{ onSubmit: (publication: Omit<Publication, 'id' | 'createdDate' | 'status'>) => void; onCancel: () => void }> = ({ onSubmit, onCancel }) => {
    const [formData, setFormData] = useState({
        title: '',
        type: 'article' as Publication['type'],
        author: '',
        subtype: '',
        materialName: '',
        authorsFromMospolytech: '',
        coAuthors: '',
        contactInfo: '',
        expertiseResult: '',
        expertiseNumber: '',
        expertiseDate: '',
        expertiseStartDate: '',
        expertiseEndDate: '',
        noStateSecrets: false
    });
    
    /*
    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        onSubmit(formData);
    };
    */

    const handleSave = () => {
        /*if (formData.title && formData.author) {
            onSubmit(formData);
        }*/
        onSubmit(formData);
    };

    return (
        <div className="fixed inset-0 flex items-center justify-center z-50 modal-overlay">
            <div className="form-bg rounded-lg shadow-lg form-border w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto">
                {/* Header */}
                <div className="flex items-center justify-between p-4 form-header-border">
                    <h3 className="text-lg font-medium form-title">
                        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                    </h3>
                    <button
                        onClick={onCancel}
                        className="form-close-btn text-xl font-bold"
                    >
                        √ó
                    </button>
                </div>

                {/* Form Content */}
                <div className="p-6 space-y-4">
                    {/* –¢–∏–ø –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –ü–æ–¥—Ç–∏–ø */}
                    <div className="grid grid-cols-2 gap-4">
                        <div>
                            <label className="block text-sm font-medium form-label mb-1">
                                –¢–∏–ø –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:
                            </label>
                            <select
                                value={formData.type}
                                onChange={(e) => setFormData({ ...formData, type: e.target.value as Publication['type'] })}
                                className="w-full px-3 py-2 form-input"
                            >
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                                {Object.entries(PUBLICATION_TYPES).map(([key, label]) => (
                                    <option key={key} value={key}>{label}</option>
                                ))}
                            </select>
                        </div>

                        <div>
                            <label className="block text-sm font-medium form-label mb-1">
                                –ü–æ–¥—Ç–∏–ø:
                            </label>
                            <select
                                value={formData.subtype}
                                onChange={(e) => setFormData({ ...formData, subtype: e.target.value })}
                                className="w-full px-3 py-2 form-input"
                            >
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                            </select>
                        </div>
                    </div>

                    {/* –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ */}
                    <div>
                        <label className="block text-sm font-medium form-label mb-1">
                            –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:
                        </label>
                        <textarea
                            value={formData.materialName}
                            onChange={(e) => setFormData({ ...formData, materialName: e.target.value })}
                            rows={3}
                            className="w-full px-3 py-2 form-input resize-none"
                        />
                    </div>

                    {/* –ê–≤—Ç–æ—Ä—ã –∏–∑ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ü–æ–ª–∏—Ç–µ—Ö–∞ */}
                    <div>
                        <label className="block text-sm font-medium form-label mb-1">
                            –ê–≤—Ç–æ—Ä—ã –∏–∑ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ü–æ–ª–∏—Ç–µ—Ö–∞: <span className="form-label-secondary">(–∫–æ–ª–ª–µ–∫—Ç–∏–≤ –∞–≤—Ç–æ—Ä–æ–≤)</span>
                        </label>
                        <div className="relative">
                            <input
                                type="text"
                                value={formData.authorsFromMospolytech}
                                onChange={(e) => setFormData({ ...formData, authorsFromMospolytech: e.target.value })}
                                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"
                                className="w-full px-3 py-2 form-input"
                            />
                            <button
                                type="button"
                                className="absolute right-2 top-2 form-search-btn"
                            >
                                üîç
                            </button>
                        </div>
                    </div>

                    {/* –°–æ–∞–≤—Ç–æ—Ä—ã */}
                    <div>
                        <label className="block text-sm font-medium form-label mb-1">
                            –°–æ–∞–≤—Ç–æ—Ä—ã: <span className="form-label-secondary">(–∏–Ω–∏—Ü–∏–∞–ª—ã, —Ñ–∞–º–∏–ª–∏—è, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</span>
                        </label>
                        <input
                            type="text"
                            value={formData.coAuthors}
                            onChange={(e) => setFormData({ ...formData, coAuthors: e.target.value })}
                            placeholder="–ê.–ê. –ò–≤–∞–Ω–æ–≤, –ë.–ë. –ü–µ—Ç—Ä–æ–≤,..."
                            className="w-full px-3 py-2 form-input"
                        />
                    </div>

                    {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ */}
                    <div>
                        <label className="block text-sm font-medium form-label mb-1">
                            –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ (–§–ò–û, —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ—á—Ç–∞):
                        </label>
                        <textarea
                            value={formData.contactInfo}
                            onChange={(e) => setFormData({ ...formData, contactInfo: e.target.value })}
                            rows={3}
                            className="w-full px-3 py-2 form-input resize-none"
                        />
                    </div>

                    {/* –≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
                    <div className="form-expert-block pt-4">
                        <h4 className="text-md font-medium form-expert-title mb-4">
                            –≠–ö–°–ü–ï–†–¢–ò–ó–ê –ü–£–ë–õ–ò–ö–ê–¶–ò–ò
                        </h4>

                        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
                        <div className="mb-4">
                            <label className="block text-sm font-medium form-label mb-2">
                                –†–µ–∑—É–ª—å—Ç–∞—Ç:
                            </label>
                            <div className="flex items-center space-x-2">
                                <input
                                    type="checkbox"
                                    id="noStateSecrets"
                                    checked={formData.noStateSecrets}
                                    onChange={(e) => setFormData({ ...formData, noStateSecrets: e.target.checked })}
                                    className="w-4 h-4 form-checkbox"
                                />
                                <label htmlFor="noStateSecrets" className="text-sm form-label">
                                    –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –≥–æ—Å. —Ç–∞–π–Ω—É
                                </label>
                            </div>
                        </div>

                        {/* –≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –¥–∞—Ç—ã */}
                        <div className="grid grid-cols-4 gap-4">
                            <div className="flex flex-col items-start">
                                <label className="block h-6 text-sm font-medium form-label mb-1">
                                    –ù–æ–º–µ—Ä –∑–∞–∫–ª—é—á–µ–Ω–∏—è:
                                </label>
                                <input
                                    type="text"
                                    value={formData.expertiseNumber}
                                    onChange={(e) => setFormData({ ...formData, expertiseNumber: e.target.value })}
                                    className="w-full px-3 py-2 form-input"
                                />
                            </div>
                            <div className="flex flex-col items-start">
                                <label className="block h-6 text-sm font-medium form-label mb-1">
                                    –î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è:
                                </label>
                                <input
                                    type="date"
                                    value={formData.expertiseDate}
                                    onChange={(e) => setFormData({ ...formData, expertiseDate: e.target.value })}
                                    className="w-full px-3 py-2 form-input"
                                />
                            </div>
                            <div className="flex flex-col items-start">
                                <label className="block h-6 text-sm font-medium form-label mb-1">
                                    –ù–∞—á–∞–ª–æ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã:
                                </label>
                                <input
                                    type="date"
                                    value={formData.expertiseStartDate}
                                    onChange={(e) => setFormData({ ...formData, expertiseStartDate: e.target.value })}
                                    className="w-full px-3 py-2 form-input"
                                />
                            </div>

                            <div className="flex flex-col items-start">
                                <label className="block h-6 text-sm font-medium form-label mb-1 whitespace-nowrap">
                                    –û–∫–æ–Ω—á–∞–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã:
                                </label>
                                <input
                                    type="date"
                                    value={formData.expertiseEndDate}
                                    onChange={(e) => setFormData({ ...formData, expertiseEndDate: e.target.value })}
                                    className="w-full px-3 py-2 form-input"
                                />
                            </div>
                        </div>
                    </div>
                </div>

                {/* Footer buttons */}
                <div className="flex justify-end space-x-3 p-4 form-footer-border">
                    <button
                        type="button"
                        onClick={handleSave}
                        className="px-4 py-2 form-save-btn rounded"
                    >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                    </button>
                    <button
                        type="button"
                        onClick={onCancel}
                        className="px-4 py-2 form-cancel-btn rounded"
                    >
                        –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ
                    </button>
                </div>
            </div>
        </div>
    );
};

export default PublicationForm;